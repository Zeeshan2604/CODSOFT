import tkinter as tk
import string
import secrets
import pyperclip

# Function to generate a password
def generate_password():
    password_length = int(length_combo.get())
    if password_length <= 0:
        result_label.config(text="Please enter a valid length")
        return

    symbols = string.ascii_letters

    complexity = complexity_combo.get()
    if complexity == "Medium":
        symbols += string.digits
    elif complexity == "High":
        symbols += string.digits + "@#_"

    password = ''.join(secrets.choice(symbols) for _ in range(password_length))

    # Ensure at least one symbol and one digit if High complexity is selected
    if complexity == "High" and not any(char in "@#_" for char in password) and not any(char.isdigit() for char in password):
        password = password[:password_length - 2] + secrets.choice("@#_") + secrets.choice(string.digits)

    password_display.config(text=password, fg="blue") 
    result_label.config(text="")
    copy_button.config(state="normal") 
    
    result_label.config(text="")

# Function to copy the password to clipboard
def copy_to_clipboard():
    password = password_display.cget("text")
    pyperclip.copy(password)
    result_label.config(text="Password copied to clipboard", foreground="green")

window = tk.Tk()
window.title("Password Generator")

window.geometry("400x380")

password_display = tk.Label(window, text="", font=("Segoe UI", 16), padx=20, pady=10, relief="solid", borderwidth=2, fg="green")
password_display.pack()

length_label = tk.Label(window, text="Password Length:", font=("Segoe UI", 12, "bold"))
length_label.pack(pady=10)

length_values = [str(i) for i in range(3, 13)]
length_combo = tk.StringVar()
length_combo.set("8")  # Default selection
length_dropdown = tk.OptionMenu(window, length_combo, *length_values)
length_dropdown.config(font=("Segoe UI", 12))
length_dropdown.pack()

complexity_label = tk.Label(window, text="Password Complexity:", font=("Segoe UI", 12, "bold"))
complexity_label.pack(pady=10)

complexity_values = ["Low", "Medium", "High"]
complexity_combo = tk.StringVar()
complexity_combo.set("Medium")  # Default selection
complexity_dropdown = tk.OptionMenu(window, complexity_combo, *complexity_values)
complexity_dropdown.config(font=("Segoe UI", 12))
complexity_dropdown.pack()

# Create a button to generate the password
generate_button = tk.Button(window, text="Generate Password", command=generate_password, font=("Segoe UI", 14), bg="light blue")
generate_button.pack(pady=10)

copy_button = tk.Button(window, text="Copy to Clipboard", command=copy_to_clipboard, font=("Segoe UI", 14))
copy_button.pack(pady=10)
copy_button.config(state="disabled")  

result_label = tk.Label(window, text="", font=("Segoe UI", 12), foreground="green")
result_label.pack()

window.mainloop()
